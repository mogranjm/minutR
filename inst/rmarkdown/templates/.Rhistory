`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) ->
path_to_collect)
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename(`Cancer Table.Cancer Diagnosis` = 'Diagnosis')
->
path_to_collect)
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis` )
->
path_to_collect)
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=``Cancer Table.Verified`) ->
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=``Cancer Table.Verified`) -> path_to_collect)
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`) ->
path_to_collect)
?readxl
?xlsx
install.packages('xlsx')
?xlsx
??xlsx
?xlsx::write.xlsx
sheetName = "Path Collection")
(data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
write.xlsx('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
sheetName = "Path Collection")
(
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
write.xlsx('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
sheetName = "Path Collection")
)
library(xlsx)
library(openxlsx)
install.packages('openxlsx')
library(openxlsx)
(
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
write.xlsx('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
sheetName = "Path Collection")
)
(
data %>%
filter(str_detect(Folder, 'Progeny$'))
)
(
data %>%
filter(str_detect(Folder, 'Progeny$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
write.xlsx('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
sheetName = "Progeny Collection")
)
?write.xlsx
wb <- createWorkbook() %>%
addWorksheet("Path Collection") %>%
addWorksheet("Progeny Collection") %>%
addWorksheet("GF Collection") %>%
addWorksheet("Unknown Collection")
wb <- createWorkbook() %>%
addWorksheet("Path Collection") #%>%
wb <- createWorkbook()
addWorksheet(wb, "Path Collection")
addWorksheet(wb, "Progeny Collection")
addWorksheet(wb, "GF Collection")
addWorksheet(wb, "Unknown Collection")
wb
(
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
writeData(data = ., wb, sheetName = "Path Collection")
)
(
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
writeData(x = ., wb, sheetName = "Path Collection")
)
(
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
writeData(x = ., wb = wb, sheet = "Path Collection")
)
(
data %>%
filter(str_detect(Folder, 'Progeny$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "Progeny Collection")
)
(
data %>%
filter(str_detect(Folder, 'Progeny$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB) %>%
writeData(x = ., wb = wb, sheet = "Progeny Collection")
)
(
data %>% filter(str_detect(Folder, 'GF$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "GF Collection")
)
View(data)
data %>% unique(Folder)
unique(data$Folder)
(
data %>% filter(str_detect(Folder, 'ped$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "Unknown Collection")
)
wb
wb$dataValidation
saveWorkbook(wb,
'F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
overwrite = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
data <- read_csv('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\all_RMH_consented.csv') %>%
mutate(
collect_path = (!is.na(`Cancer Table.Cancer Diagnosis`) &
is.na(`Cancer Table.Link to Path Report`)),
collect_ped = `Total of Family Members`<2,
tumour_num = NA
)
# Assign tumour index to each row (each row represents a single tumour)
for (i in 1:nrow(data)){
data$tumour_num[i] <- data[1:i,] %>%
filter(GFNumber == data$GFNumber[i]) %>%
group_by(GFNumber) %>%
tally() %>% select(n) %>% pull() %>% `-`(.,1)
}
output <- data %>%
filter(str_detect(Folder, '_')) %>%
select(Folder,
GFNumber,
FamilyGF,
FirstName,
Surname,
DoB) %>%
arrange(Folder)
output %>%
group_by(Folder) %>%
tally()
wb <- createWorkbook()
addWorksheet(wb, "Path Collection")
addWorksheet(wb, "Progeny Collection")
addWorksheet(wb, "GF Collection")
addWorksheet(wb, "Unknown Collection")
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
writeData(x = ., wb = wb, sheet = "Path Collection")
data %>%
filter(str_detect(Folder, 'Progeny$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB) %>%
writeData(x = ., wb = wb, sheet = "Progeny Collection")
data %>% filter(str_detect(Folder, 'GF$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "GF Collection")
data %>% filter(str_detect(Folder, 'ped$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "Unknown Collection")
saveWorkbook(wb,
'F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
overwrite = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
data <- read_csv('F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\all_RMH_consented.csv') %>%
mutate(
collect_path = (!is.na(`Cancer Table.Cancer Diagnosis`) &
is.na(`Cancer Table.Link to Path Report`)),
collect_ped = `Total of Family Members`<2,
tumour_num = NA
)
# Assign tumour index to each row (each row represents a single tumour)
for (i in 1:nrow(data)){
data$tumour_num[i] <- data[1:i,] %>%
filter(GFNumber == data$GFNumber[i]) %>%
group_by(GFNumber) %>%
tally() %>% select(n) %>% pull() %>% `-`(.,1)
}
output <- data %>%
filter(str_detect(Folder, '_')) %>%
select(Folder,
GFNumber,
FamilyGF,
FirstName,
Surname,
DoB) %>%
arrange(Folder)
output %>%
group_by(Folder) %>%
tally()
wb <- createWorkbook()
addWorksheet(wb, "Path Collection")
addWorksheet(wb, "Progeny Collection")
addWorksheet(wb, "GF Collection")
addWorksheet(wb, "Unknown Collection")
data %>% filter(str_detect(Folder, 'path$') &
tumour_num >= 1) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
`Cancer Table.Cancer Diagnosis`,
`Cancer Table.Verified`,
tumour_num) %>%
rename('Diagnosis'=`Cancer Table.Cancer Diagnosis`,
'Verified'=`Cancer Table.Verified`)  %>%
writeData(x = ., wb = wb, sheet = "Path Collection")
data %>%
filter(str_detect(Folder, 'Progeny$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB) %>%
writeData(x = ., wb = wb, sheet = "Progeny Collection")
data %>% filter(str_detect(Folder, 'GF$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "GF Collection")
data %>% filter(str_detect(Folder, 'ped$')) %>%
select(FamilyGF,
GFNumber,
FirstName,
Surname,
DoB,
`Total of Family Members`) %>%
rename('FamCount'=`Total of Family Members`) %>%
writeData(x = ., wb = wb, sheet = "Unknown Collection")
saveWorkbook(wb,
'F:\\Research\\TRANSLATIONAL STUDY\\Variants in Practice (VIP)\\TEMP RMH data collection_20181019\\data_collection.xlsx',
overwrite = TRUE)
devtools::install_github("abjur/abjTempaltes")
install.packages(devtools)
install.packages('devtools')
devtools::install_github("abjur/abjTempaltes")
library(devtools)
?install_github
devtools::install_github("abjur/abjTempaltes")
devtools::install_github("abjur/abjTempaltes", ref = "trunk")
install.packages("abjTemplates", type="source")
install.packages('tinytex')
tinytex::install_tinytex()
knitr::knit_params_yaml()
knitr::knit_params_yaml('attendees')
knitr::knit_params_yaml('yaml')
??tint
install.packages('tint')
?tint::tintPdf
?rticles::acm_article
install.packages('cowplot')
?cowplot
library(cowplot)
library(tidyverse)
mtcars
colnames(mtcars)
cowplot
?cowplot
??cowplot
plt <- ggplot(mpg, aes(x=cty, y=hwy, colour=factor(cyl))) + geom_point(size=2.5)
save_plot('mpg.png', plot.mpg)
save_plot('mpg.png', plt)
getwd()
colnames(mpg)
plt_2 <- ggplot(mpg, aes(x=cty, y=hwy, colour=factor(cyl))) + geom_histogram()
plt_2
plt_2 <-
ggplot(mpg, aes(x=cty, colour=factor(cyl))) + geom_histogram()
#plt_2 <-
ggplot(mpg, aes(x=cty, colour=factor(cyl))) + geom_histogram()
#plt_2 <-
ggplot(mpg, aes(x=cty, fill=factor(cyl))) + geom_histogram()
library(tidyverse
library(tidyverse)
plt_1 <- ggplot(mpg, aes(x=cty, y=hwy, colour=factor(cyl))) + geom_point(size=2.5)
plt_2 <- ggplot(mpg, aes(x=cty, fill=factor(cyl))) + geom_histogram()
plot_grid(plt_1, plt_2)
library(cowplot)
library(tidyverse)
library(cowplot)
plt_1 <- ggplot(mpg, aes(x=cty, y=hwy, colour=factor(cyl))) + geom_point(size=2.5)
plt_2 <- ggplot(mpg, aes(x=cty, fill=factor(cyl))) + geom_histogram()
plot_grid(plt_1, plt_2)
plot_grid(plt_1, plt_2) %>% save_plot(filename="test.png", plot=.)
plot_grid(plt_1, plt_2) %>% save_plot(filename="test.png", plot=., ncol=1, nrow=2)
plot_grid(plt_1, plt_2, ncol=1, nrow=2) %>% save_plot(filename="test.png", plot=.)
grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2)
grd
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
?mpg
colnames(mpg)
plt_2 <- ggplot(mpg, aes(x=manufacturer, fill=factor(cyl))) + geom_histogram()
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
plt_2 <- ggplot(mpg, aes(x=year, fill=factor(cyl))) + geom_histogram()
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
plt_2 <- ggplot(mpg, aes(x=drv, fill=factor(cyl))) + geom_histogram()
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
plt_2 <- ggplot(mpg, aes(x=drv, fill=factor(cyl))) + geom_histogram(stat='count')
plt_2 <- ggplot(mpg, aes(x=displ, fill=factor(cyl))) + geom_histogram()
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
plt_2 <- ggplot(mpg, aes(x=displ, fill=factor(cyl))) + geom_histogram(binwidth = 50)
(plt_2 <- ggplot(mpg, aes(x=displ, fill=factor(cyl))) + geom_histogram(binwidth = 50))
(plt_2 <- ggplot(mpg, aes(x=displ, fill=factor(cyl))) + geom_histogram(binwidth = 1))
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
save_plot(filename="test.png", plot=grd)
?save_plot
save_plot(filename="test.png", plot=grd, ncol=1, nrow=2)
( grd <- plot_grid(plt_1, plt_2) )
save_plot(filename="test.png", plot=grd)
save_plot
ggsave(filename="test.png", plot=grd)
file.remove('test.png')
ggsave(filename="test.png", plot=grd)
file.exists('test.png')
file.remove('test.png')
save_plot(filename="test.png", plot=grd)
file.exists('test.png')
( grd <- plot_grid(plt_1, plt_2, ncol=1, nrow=2) )
ggsave(filename="test.png", plot=grd)
version
as.date("27 Feb 2018")
?date
date("27 Feb 2018")
?lubridate
lubridate::parse_date_time("27 Feb 2018")
dmy(27022018)
lubridate::dmy(27022018)
library(rticles)
?rticles
??rticles
?format
?lubridate::hm
#files.copy(system.file("rmd/latex/default-1.17.0.2.tex", package = "rmarkdown"), "template.tex")
getwd()
setwd(paste0(getwd(), "/Projects/minutR/inst/rmarkdown/templates"))
getwd()
files.copy(system.file("rmd/latex/default-1.17.0.2.tex", package = "rmarkdown"), "template.tex")
file.copy(system.file("rmd/latex/default-1.17.0.2.tex", package = "rmarkdown"), "template.tex")
list.files()
lubridate::hm("13:00")
format(lubridate::hm("13:00"), "%I"
)
format(lubridate::hm("13:00"), "%I")
format(lubridate::hm("13:00"), "%I:%M%p")
format(lubridate::hm("13:00"), "%I:%M"
)
format(lubridate::hm("13:00"), "%H:%M")
format(lubridate::parse_date_time("13:00"), "%H:%M")
format(lubridate::parse_date_time("13:00", "hm"), "%H:%M")
format(lubridate::parse_date_time("13:00", "HM"), "%H:%M")
file.rename('template.tex', 'default.latex')
list.files
list.files()
